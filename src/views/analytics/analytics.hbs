{{#section 'head'}}
    <link rel="stylesheet" href="/css/circularPro">
{{/section}}
<div class="col-xl-12">

    <div class="row">
        <div class="col-sm col-xl-4">
            <div class="p-3 bg-warning-400 rounded overflow-hidden position-relative text-white mb-g">
                <div class="">
                    <h3 class="display-4 d-block l-h-n m-0 fw-500">
                        ${{money metas.[0].mc.minimo}}
                        <small class="m-0 l-h-n">Minimo</small>
                    </h3>
                </div>
            </div>
        </div>
        <div class="col-sm col-xl-4">
            <div class="p-3 bg-success-200 rounded overflow-hidden position-relative text-white mb-g">
                <div class="">
                    <h3 class="display-4 d-block l-h-n m-0 fw-500">
                        ${{money metas.[0].mc.media}}
                        <small class="m-0 l-h-n">Media</small>
                    </h3>
                </div>
            </div>
        </div>
        <div class="col-sm col-xl-4">
            <div class="p-3 bg-primary-300 rounded overflow-hidden position-relative text-white mb-g">
                <div class="">
                    <h3 class="display-4 d-block l-h-n m-0 fw-500">
                        ${{money metas.[0].mc.esperado}}
                        <small class="m-0 l-h-n">Esperado</small>
                    </h3>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-xl-12">
            <div id="panel-1" class="panel">
                <div class="panel-hdr">
                    <h2>
                        Empleados <span class="fw-300"><i>Por Tipo</i></span>
                    </h2>
                    <div class="panel-toolbar">
                        <button class="btn btn-panel" data-action="panel-collapse" data-toggle="tooltip"
                            data-offset="0,10" data-original-title="Collapse"></button>
                        <button class="btn btn-panel" data-action="panel-fullscreen" data-toggle="tooltip"
                            data-offset="0,10" data-original-title="Fullscreen"></button>
                        <button class="btn btn-panel" data-action="panel-close" data-toggle="tooltip" data-offset="0,10"
                            data-original-title="Close"></button>
                    </div>
                </div>
                <div class="panel-container show">
                    <div class="panel-content">
                        <div id="metasAll">
                            <canvas id="chart1" style="width:100%; height:350px;"></canvas>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-xl-12">
            <div id="panel-1" class="panel">
                <div class="panel-hdr">
                    <h2>
                        Empleados <span class="fw-300"><i>Por Tipo</i></span>
                    </h2>
                    <div class="panel-toolbar">
                        <button class="btn btn-panel" data-action="panel-collapse" data-toggle="tooltip"
                            data-offset="0,10" data-original-title="Collapse"></button>
                        <button class="btn btn-panel" data-action="panel-fullscreen" data-toggle="tooltip"
                            data-offset="0,10" data-original-title="Fullscreen"></button>
                        <button class="btn btn-panel" data-action="panel-close" data-toggle="tooltip" data-offset="0,10"
                            data-original-title="Close"></button>
                    </div>
                </div>
                <div class="panel-container show">
                    <div class="panel-content">
                        <div id="metascot">
                            <canvas id="chart2" style="width:100%; height:350px;"></canvas>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


{{#each sucursales}}
    <div class="row">
        <div class="col-xl-12">
            <div id="panel-1" class="panel">
                <div class="panel-hdr">
                    <h2>
                        Sucursales <span class="fw-300"><i></i></span>
                    </h2>
                    <div class="panel-toolbar">
                        <button class="btn btn-panel" data-action="panel-collapse" data-toggle="tooltip"
                        data-offset="0,10" data-original-title="Collapse"></button>
                        <button class="btn btn-panel" data-action="panel-fullscreen" data-toggle="tooltip" data-offset="0,10" data-original-title="Fullscreen"></button>
                        <button class="btn btn-panel" data-action="panel-close" data-toggle="tooltip" data-offset="0,10"
                        data-original-title="Close"></button>
                    </div>
                </div>
                


                <div class="panel-container show">
                    <div class="panel-content">
                        <div class="row">
                                <a href="analytics/{{id }}"><h1 class="mt-6 ml-6">{{nombre}}</h1></a>
                            <div class="p-1 position-absolute pos-right pos-top mt-3 mr-3 z-index-cloud d-flex align-items-center justify-content-center">
                                <div class="border-faded border-top-0 border-left-0 border-bottom-0 py-2 pr-4 mr-3 hidden-sm-down">
                                    <div class="text-right fw-500 l-h-n d-flex flex-column">																
                                        <div class="h3 m-0 d-flex align-items-center justify-content-end">
                                            <div class='icon-stack mr-2'>
                                                <i class="fal fa-sack-dollar"></i>
                                            </div>
                                            <p class="counter-count font-weight-bold ">${{money total}}</p>
                                        </div>
                                        <span class="m-0 fs-xs text-muted">MXN</span>
                                    </div> 
                                </div>
                                <div class="js-easy-pie-chart color-info-400 position-relative d-inline-flex align-items-center justify-content-center" data-percent="{{porcentaje}}" data-piesize="95" data-linewidth="10" data-scalelength="5">
                                    <div class="position-absolute pos-top pos-left pos-right pos-bottom d-flex align-items-center justify-content-center fw-500 fs-xl text-dark">{{porcentaje}}%</div>
                                </div>
				            </div>	                    
                        </div>
                    </div>
                    <div id="sucursal{{id}}" class="mt-3">
                        <canvas style="width:100%; height:300px;"></canvas>
                    </div>
                </div>
            </div>
        </div>

    </div>
{{/each}}
</div>




{{#section 'scripts'}}
<script src="/js/statistics/chartjs/chartjs.bundle.js"></script>
<script src="/js/statistics/easypiechart/easypiechart.bundle.js"></script>

<script>


    //*Contador
    $('.counter-count').each(function () {
		$(this).prop('Counter', 100).animate({
			Counter: $(this).text()
		}, {
			//chnage count up speed here
			duration: 4000,
			easing: 'swing',
			step: function (now) {
				$(this).text(Math.ceil(now));
			}
		});
	});



    var chart = document.getElementById('chart2').getContext('2d')
    var gradientM = chart.createLinearGradient(0, 0, 0, 450);
    gradientM.addColorStop(0, 'rgba(255, 194, 65, 1)');
    gradientM.addColorStop(0.5, 'rgba(255, 194, 65, 0.5)');
    gradientM.addColorStop(1, 'rgba(255, 194, 65, 0)');

    var gradientMM = chart.createLinearGradient(0, 0, 0, 450);
    gradientMM.addColorStop(0, 'rgba(0, 255, 60, 1)');
    gradientMM.addColorStop(0.5, 'rgba(0, 255, 60, 0.5)');
    gradientMM.addColorStop(1, 'rgba(0, 255, 60, 0)');

    var gradientE = chart.createLinearGradient(0, 0, 0, 450);
    gradientE.addColorStop(0, 'rgba(140, 156, 198, 1)');
    gradientE.addColorStop(0.5, 'rgba(140, 156, 198, 0.5)');
    gradientE.addColorStop(1, 'rgba(140, 156, 198, 0)');

    var chart1 = document.getElementById('chart1').getContext('2d')
    var gradientM1 = chart.createLinearGradient(0, 0, 0, 450);
    gradientM1.addColorStop(0, 'rgba(255, 194, 65, 1)');
    gradientM1.addColorStop(0.5, 'rgba(255, 194, 65, 0.5)');
    gradientM1.addColorStop(1, 'rgba(255, 194, 65, 0)');

    var gradientMM1 = chart.createLinearGradient(0, 0, 0, 450);
    gradientMM1.addColorStop(0, 'rgba(0, 255, 60, 1)');
    gradientMM1.addColorStop(0.5, 'rgba(0, 255, 60, 0.5)');
    gradientMM1.addColorStop(1, 'rgba(0, 255, 60, 0)');

    var gradientE1 = chart.createLinearGradient(0, 0, 0, 450);
    gradientE1.addColorStop(0, 'rgba(140, 156, 198, 1)');
    gradientE1.addColorStop(0.5, 'rgba(140, 156, 198, 0.5)');
    gradientE1.addColorStop(1, 'rgba(140, 156, 198, 0)');

    /* bar stacked */
    var barStacked = function () {
        var barStackedData = {
            labels: [{{#each dates}} "{{y}}/{{m}}", {{/each}}].reverse(),
            datasets: [
                {
                    type: 'line',
                    label: 'Venta',
                    borderColor: '#5D5D5D',
                    pointBackgroundColor: '#ffff',
                    pointBorderColor: '#5D5D5D',
                    pointBorderWidth: 1,
                    tension: 0,
                    borderWidth: 2,
                    pointHoverRadius: 5,
                    fill: false,
                    data: [{{#each ventas}} {{total}}, {{/each}}].reverse()
                },
                {
                    type: 'line',
                    label: 'Facturas',
                    borderColor: '#36A2EB',
                    pointBackgroundColor: '#ffff',
                    pointBorderColor: '#36A2EB',
                    pointBorderWidth: 1,
                    tension: 0,
                    borderWidth: 2,
                    pointHoverRadius: 5,
                    fill: false,
                    data: [{{#each facturas}} {{total}}, {{/each}}].reverse()
                },
                {
                    type: 'line',
                    label: 'Ingresos',
                    borderColor: '#FF2724',
                    pointBackgroundColor: '#ffff',
                    pointBorderColor: '#FF2724',
                    pointBorderWidth: 1,
                    tension: 0,
                    borderWidth: 2,
                    pointHoverRadius: 5,
                    fill: false,
                    data: [{{#each ingresos}} {{total}}, {{/each}}].reverse()
                },
                {
                    label: "Minimo",
                    backgroundColor: gradientM,
                    borderColor: gradientM,
                    borderWidth: 1,
                    data: [{{#each metas}} {{mc.minimo}}, {{/each}}].reverse()
                },
                {
                    label: "Media",
                    backgroundColor: gradientMM,
                    borderColor: gradientMM,
                    borderWidth: 1,
                    data: [{{#each metas}} {{mc.media}}, {{/each}}].reverse()
                },
                {
                    label: "Esperado",
                    backgroundColor: gradientE,
                    borderColor: gradientE,
                    borderWidth: 1,
                    data: [{{#each metas}} {{mc.esperado}}, {{/each}}].reverse()
                }
            ]        
        };
        var config = {
            type: 'bar',
            data: barStackedData,
            options:
            {

                tooltips: {
                    callbacks: {
                        label: function (t, d) {
                            var xLabel = d.datasets[t.datasetIndex].label;
                            var yLabel = t.yLabel >= 1000 ? '$' + t.yLabel.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") : '$' + t.yLabel;
                            return xLabel + ': ' + yLabel;
                        }
                    }
                },
                legend:
                {
                    display: true,
                    labels:
                    {
                        display: false
                    }
                },
                scales:
                {
                    yAxes: [
                        {
                            stacked: false,
                            gridLines:
                            {
                                display: true,
                                color: "#f2f2f2"
                            },
                            ticks:
                            {
                                callback: function (value, index, values) {
                                    if (parseInt(value) >= 1000) {
                                        return '$' + value.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                                    } else {
                                        return '$' + value;
                                    }
                                },
                                beginAtZero: true,
                                fontSize: 11
                            }
                        }],
                    xAxes: [
                        {
                            stacked: false,
                            gridLines:
                            {
                                display: true,
                                color: "#f2f2f2"
                            },
                            ticks:
                            {
                                beginAtZero: true,
                                fontSize: 11
                            }
                        }]
                }
            }
        }
        new Chart($("#metasAll > canvas").get(0).getContext("2d"), config);
    }
    /* bar stacked -- end */

    /* bar stacked */
    var barStackeds = function () {
        var barStackedData = {
            labels: [{{#each dates}} "{{y}}/{{m}}", {{/each}}].reverse(),
            datasets: [
                {
                    type: 'line',
                    label: 'Cotizaciones',
                    borderColor: color.danger._300,
                    pointBackgroundColor: '#ffff',
                    pointBorderColor: color.danger._500,
                    pointBorderWidth: 1,
                    tension: 0,
                    borderWidth: 2,
                    pointHoverRadius: 5,
                    fill: false,
                    data: [{{#each cotizaciones}} {{total}}, {{/each}}].reverse()
                },
                {
                    label: "Minima",
                    backgroundColor: gradientM1,
                    borderColor: gradientM1,
                    borderWidth: 1,
                    data: [{{#each metas}} {{multiply pb.minimo 3}}, {{/each}}].reverse()
                },
                {
                    label: "Media",
                    backgroundColor: gradientMM1,
                    borderColor: gradientMM1,
                    borderWidth: 1,
                    data: [ {{#each metas}} {{multiply pb.media 3}}, {{/each}} ].reverse()
                },
                {
                    label: "Esperada",
                    backgroundColor: gradientE1,
                    borderColor: gradientE1,
                    borderWidth: 1,
                    data: [ {{#each metas}} {{multiply pb.esperado 3}}, {{/each}} ].reverse()
                },

            ]

        };
        var config = {
            type: 'bar',
            data: barStackedData,
            options:
            {

                tooltips: {
                    callbacks: {
                        label: function (t, d) {
                            var xLabel = d.datasets[t.datasetIndex].label;
                            var yLabel = t.yLabel >= 1000 ? '$' + t.yLabel.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") : '$' + t.yLabel;
                            return xLabel + ': ' + yLabel;
                        }
                    }
                },
                legend:
                {
                    display: true,
                    labels:
                    {
                        display: false
                    }
                },
                scales:
                {
                    yAxes: [
                        {
                            stacked: false,
                            gridLines:
                            {
                                display: true,
                                color: "#f2f2f2"
                            },
                            ticks:
                            {
                                callback: function (value, index, values) {
                                    if (parseInt(value) >= 1000) {
                                        return '$' + value.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                                    } else {
                                        return '$' + value;
                                    }
                                },
                                beginAtZero: true,
                                fontSize: 11
                            }
                        }],
                    xAxes: [
                        {
                            stacked: false,
                            gridLines:
                            {
                                display: true,
                                color: "#f2f2f2"
                            },
                            ticks:
                            {
                                beginAtZero: true,
                                fontSize: 11
                            }
                        }]
                }
            }
        }
        new Chart($("#metascot > canvas").get(0).getContext("2d"), config);
    }
    /* bar stacked -- end */




            /* area chart */
        {{#each sucursales}}
            var sucursal{{id}} = function() {
                var config = {
                    type: 'line',
                    data:
                    {
                        labels: [{{#each porcentajeIngreso}} '{{date}}', {{/each}}].reverse(),
                        datasets: [
                            {
                                label: "Primary",
                                backgroundColor: 'rgba(136,106,181, 0.2)',
                                borderColor: color.primary._500,
                                pointBackgroundColor: color.primary._700,
                                pointBorderColor: 'rgba(0, 0, 0, 0)',
                                pointBorderWidth: 1,
                                borderWidth: 1,
                                pointRadius: 3,
                                pointHoverRadius: 4,
                                data: [
                                    {{#each porcentajeIngreso}}
                                        {{percent}},
                                    {{/each}}
                                ].reverse(),
                                fill: true
                            }
                        ]
                    },
                    options:
                    {
                        responsive: true,
                        title:
                        {
                            display: false,
                            text: 'Area Chart'
                        },
                        tooltips:
                        {
                            mode: 'index',
                            intersect: false,
                        },
                        hover:
                            {
                            mode: 'nearest',
                            intersect: true
                        },
                        scales:
                        {
                            xAxes: [
                            {
                                display: true,
                                scaleLabel:
                                {
                                    display: false,
                                    labelString: '6 months forecast'
                                },
                                gridLines:
                                {
                                    display: true,
                                    color: "#f2f2f2"
                                },
                                ticks:
                                {
                                    beginAtZero: true,
                                    fontSize: 11
                                }
                            }],
                            yAxes: [
                            {
                                display: true,
                                scaleLabel:
                                {
                                    display: false,
                                    labelString: 'Profit margin (approx)'
                                },
                                gridLines:
                                {
                                    display: true,
                                    color: "#f2f2f2"
                                },
                                ticks:
                                {
                                    beginAtZero: true,
                                    fontSize: 11
                                }
                            }]
                        }
                    }
                };
                new Chart($("#sucursal{{id}} > canvas").get(0).getContext("2d"), config);
            }
        {{/each}}



    $(document).ready(function () {
        barStacked();
        barStackeds();
        {{#each sucursales}}
            sucursal{{id}}();
        {{/each}}

    });   
</script>
{{/section}}