<div class="row">
    <div class="col-xl-12">
        <div id="panel-1" class="panel">
            <div class="panel-hdr">
                <h2>
                    Contrato <span class="fw-300"><i>DOTDCD</i></span>
                </h2>
                <div class="panel-toolbar">
                    <button class="btn btn-panel" data-action="panel-collapse" data-toggle="tooltip" data-offset="0,10"
                        data-original-title="Collapse"></button>
                    <button class="btn btn-panel" data-action="panel-fullscreen" data-toggle="tooltip"
                        data-offset="0,10" data-original-title="Fullscreen"></button>
                    <button class="btn btn-panel" data-action="panel-close" data-toggle="tooltip" data-offset="0,10"
                        data-original-title="Close"></button>
                </div>
            </div>
            <div class="panel-container show">
                <div class="panel-content">
                    <div class="contrato container" id="divContrato" style="text-align: justify;">
                        <center>
                        <form action="" method="post">

                            <label for="empresa">Empresa</label>
                            <input type="text" name="empresa" id="" placeholder="Ingrese la empresa">

                            <label for="nombre">Nombre</label>
                            <input type="text" name="nombre" id="" placeholder="Ingrese el nombre">

                            <label for="edad">Edad</label>
                            <input type="text" name="edad" id="" placeholder="Ingrese la edad">

                            <label for="direccion">Direccion</label>
                            <input type="text" name="direccion" id="" placeholder="Ingrese la direccion">

                            <select name="tiempo" id="">
                                <option value="" selected></option>
                                <option value="1">1 Mes</option>
                                <option value="2">3 Meses</option>
                                <option value="3">6 Meses</option>
                            </select>

                            <label for="sueldo">Sueldo</label>
                            <input type="text" name="sueldo" id="" placeholder="Ingrese el sueldo">

                            <label for="fecha_firma">Fecha Firma</label>
                            <input type="date" name="fecha_firma" id="" >

                            <label for="fecha_validacion">Fecha de Validacion</label>
                            <input type="date" name="fecha_validacion" id="">

                        </form>
                    
                    
                        <p>Firmar a continuación:</p>
                        <canvas id="canvas" style="width: 10px !important, height:500px; border-bottom:1px solid black;"></canvas><br>
                        <span>Firma</span>
                    </div>
                        <br>
                        <button id="btnDescargar" type="button" class="btn btn-lg btn-success">
                            <span class="fal fa-download mr-1"></span>
                            Descargar
                        </button>

                        <button id="btnLimpiar" type="button" class="btn btn-lg btn-danger">
                            <span class="fal fa-times mr-1"></span>
                            Limpiar
                        </button>
                        <button id="btnCrearPdf" type="button" class="btn btn-lg btn-dark">
                            <span class="fal  fa-eject mr-1"></span>
                            Generar
                        </button>
                        <br>

                </div>
            </div>
        </div>
    </div>
</div>


{{#section 'scripts'}}
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.10.1/html2pdf.bundle.min.js" integrity="sha512-GsLlZN/3F2ErC5ifS5QtgpiJtWd43JWSuIgh7mbzZ8zBps+dvLusV+eNQATqgA/HdeKFVgA5v3S/cIrLF7QnIg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

<script>

    const contrato = document.getElementById('#divContrato');

document.addEventListener("DOMContentLoaded", () => {
    // Escuchamos el click del botón
    const $boton = document.querySelector("#btnCrearPdf");
    $boton.addEventListener("click", () => {
        const $elementoParaConvertir = document.getElementById('divContrato'); // <-- Aquí puedes elegir cualquier elemento del DOM
        html2pdf()
            .set({
                margin: 1,
                filename: 'documento.pdf',
                image: {
                    type: 'jpeg',
                    quality: 0.98
                },
                html2canvas: {
                    scale: 3, // A mayor escala, mejores gráficos, pero más peso
                    letterRendering: true,
                },
                jsPDF: {
                    unit: "in",
                    format: "a3",
                    orientation: 'portrait' // landscape o portrait
                }
            })
            .from($elementoParaConvertir)
            .save()
            .catch(err => console.log(err));
    });
});
    const $canvas = document.querySelector("#canvas");
    const $btnLimpiar = document.querySelector("#btnLimpiar");
    const $btnGenerarDocumento = document.querySelector("#btnGenerarDocumento");
    const $btnDescargar = document.querySelector("#btnDescargar");


    const contexto = $canvas.getContext("2d");
    const COLOR = "black";
    const COLOR_FONDO = "white";
    const GROSOR = 2;
    let xAnterior = 0, yAnterior = 0, xActual = 0, yActual = 0;
    const obtenerXReal = (clientX) => clientX - $canvas.getBoundingClientRect().left;
    const obtenerYReal = (clientY) => clientY - $canvas.getBoundingClientRect().top;
    let haComenzadoDibujo = false; // Bandera que indica si el usuario está presionando el botón del mouse sin soltarlo
    $canvas.addEventListener("mousedown", evento => {
        // En este evento solo se ha iniciado el clic, así que dibujamos un punto
        xAnterior = xActual;
        yAnterior = yActual;
        xActual = obtenerXReal(evento.clientX);
        yActual = obtenerYReal(evento.clientY);
        contexto.beginPath();
        contexto.fillStyle = COLOR;
        contexto.fillRect(xActual, yActual, GROSOR, GROSOR);
        contexto.closePath();
        // Y establecemos la bandera
        haComenzadoDibujo = true;
    });

    $canvas.addEventListener("mousemove", (evento) => {
        if (!haComenzadoDibujo) {
            return;
        }
        // El mouse se está moviendo y el usuario está presionando el botón, así que dibujamos todo

        xAnterior = xActual;
        yAnterior = yActual;
        xActual = obtenerXReal(evento.clientX);
        yActual = obtenerYReal(evento.clientY);
        contexto.beginPath();
        contexto.moveTo(xAnterior, yAnterior);
        contexto.lineTo(xActual, yActual);
        contexto.strokeStyle = COLOR;
        contexto.lineWidth = GROSOR;
        contexto.stroke();
        contexto.closePath();
    });
    ["mouseup", "mouseout"].forEach(nombreDeEvento => {
        $canvas.addEventListener(nombreDeEvento, () => {
            haComenzadoDibujo = false;
        });
    });
    // Lo demás tiene que ver con pintar sobre el canvas en los eventos del mouse
    $canvas.addEventListener("mousedown", evento => {
        // En este evento solo se ha iniciado el clic, así que dibujamos un punto
        xAnterior = xActual;
        yAnterior = yActual;
        xActual = obtenerXReal(evento.clientX);
        yActual = obtenerYReal(evento.clientY);
        contexto.beginPath();
        contexto.fillStyle = COLOR;
        contexto.fillRect(xActual, yActual, GROSOR, GROSOR);
        contexto.closePath();
        // Y establecemos la bandera
        haComenzadoDibujo = true;
    });

    $canvas.addEventListener("mousemove", (evento) => {
        if (!haComenzadoDibujo) {
            return;
        }
        // El mouse se está moviendo y el usuario está presionando el botón, así que dibujamos todo

        xAnterior = xActual;
        yAnterior = yActual;
        xActual = obtenerXReal(evento.clientX);
        yActual = obtenerYReal(evento.clientY);
        contexto.beginPath();
        contexto.moveTo(xAnterior, yAnterior);
        contexto.lineTo(xActual, yActual);
        contexto.strokeStyle = COLOR;
        contexto.lineWidth = GROSOR;
        contexto.stroke();
        contexto.closePath();
    });
    ["mouseup", "mouseout"].forEach(nombreDeEvento => {
        $canvas.addEventListener(nombreDeEvento, () => {
            haComenzadoDibujo = false;
        });
    });

    const limpiarCanvas = () => {
        // Colocar color blanco en fondo de canvas
        contexto.fillStyle = COLOR_FONDO;
        contexto.fillRect(0, 0, $canvas.width, $canvas.height);
    };
    $btnLimpiar.onclick = limpiarCanvas;
    limpiarCanvas();



    // Escuchar clic del botón para descargar el canvas
    $btnDescargar.onclick = () => {
        const enlace = document.createElement('a');
        // El título
        enlace.download = "Firma.png";
        // Convertir la imagen a Base64 y ponerlo en el enlace
        enlace.href = $canvas.toDataURL();
        // Hacer click en él
        enlace.click();
    };
</script>
{{/section}}